{"ast":null,"code":"var _jsxFileName = \"/Users/harsini/Desktop/swoosh/src/components/Dropbox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport \"./Dropbox.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dropzone = ({\n  onDrop,\n  accept\n}) => {\n  _s();\n\n  // Initializing useDropzone hooks with options\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"dropzone-input\",\n      ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"dropzone-content\",\n        children: \"Release to drop the files here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"dropzone-content\",\n        children: \"Drag some files here, or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n/*  <div>\n            <div className=\"minion\">\n              <div class=\"goggle-strap left\"></div>\n              <div class=\"goggle-strap right\"></div>\n              <div class=\"goggle-strap-link left\"></div>\n              <div class=\"goggle-strap-link right\"></div>\n              <div class=\"goggle-frame left\">\n                <div class=\"goggle\">\n                  <div class=\"eye\"></div>\n                </div>\n              </div>\n              <div class=\"goggle-frame right\">\n                <div class=\"goggle\">\n                  <div class=\"eye\"></div>\n                </div>\n              </div>\n              <div class=\"goggle-shadow left\"></div>\n              <div class=\"goggle-shadow right\"></div>\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n  );\n\n  function eyeball() {\n    const eye = document.querySelectorAll(\".eye\");\n    eye.forEach(function (eye) {\n      let x = eye.getBoundingClientRect.left + eye.clientWidth / 2;\n      let y = eye.getBoundingClientRect.top + eye.clientHeight / 2;\n      let radian = Math.atan2(x, y);\n      let rotation = radian * (180 / Math.PI) * -1 + 270;\n      eye.style.transform = \"rotate(\" + rotation + \"deg)\";\n      console.log(\"rotate eyes\");\n    });\n  }\n} */\n\n\n_s(Dropzone, \"YfI2qKQYNDOj7ozxGshQtast5Mk=\", false, function () {\n  return [useDropzone];\n});\n\n_c = Dropzone;\nexport default Dropzone;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropzone\");","map":{"version":3,"sources":["/Users/harsini/Desktop/swoosh/src/components/Dropbox.js"],"names":["React","useCallback","useDropzone","Dropzone","onDrop","accept","getRootProps","getInputProps","isDragActive"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAO,eAAP;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAwB;AAAA;;AACvC;AACA,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,aAAhB;AAA+BC,IAAAA;AAA/B,MAAgDN,WAAW,CAAC;AAChEE,IAAAA,MADgE;AAEhEC,IAAAA;AAFgE,GAAD,CAAjE;AAIA,sBACE,oBAASC,YAAY,EAArB;AAAA,4BACE;AAAO,MAAA,SAAS,EAAC,gBAAjB;AAAA,SAAsCC,aAAa;AAAnD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACGC,YAAY,gBACX;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADW,gBAGX;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CApBD;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GA1DML,Q;UAEkDD,W;;;KAFlDC,Q;AA4DN,eAAeA,QAAf","sourcesContent":["import React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport \"./Dropbox.css\";\n\nconst Dropzone = ({ onDrop, accept }) => {\n  // Initializing useDropzone hooks with options\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept,\n  });\n  return (\n    <div {...getRootProps()}>\n      <input className=\"dropzone-input\" {...getInputProps()} />\n      <div className=\"text-center\">\n        {isDragActive ? (\n          <p className=\"dropzone-content\">Release to drop the files here</p>\n        ) : (\n          <p className=\"dropzone-content\">\n            Drag some files here, or click to select files\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n\n/*  <div>\n            <div className=\"minion\">\n              <div class=\"goggle-strap left\"></div>\n              <div class=\"goggle-strap right\"></div>\n              <div class=\"goggle-strap-link left\"></div>\n              <div class=\"goggle-strap-link right\"></div>\n              <div class=\"goggle-frame left\">\n                <div class=\"goggle\">\n                  <div class=\"eye\"></div>\n                </div>\n              </div>\n              <div class=\"goggle-frame right\">\n                <div class=\"goggle\">\n                  <div class=\"eye\"></div>\n                </div>\n              </div>\n              <div class=\"goggle-shadow left\"></div>\n              <div class=\"goggle-shadow right\"></div>\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n  );\n\n  function eyeball() {\n    const eye = document.querySelectorAll(\".eye\");\n    eye.forEach(function (eye) {\n      let x = eye.getBoundingClientRect.left + eye.clientWidth / 2;\n      let y = eye.getBoundingClientRect.top + eye.clientHeight / 2;\n      let radian = Math.atan2(x, y);\n      let rotation = radian * (180 / Math.PI) * -1 + 270;\n      eye.style.transform = \"rotate(\" + rotation + \"deg)\";\n      console.log(\"rotate eyes\");\n    });\n  }\n} */\n\nexport default Dropzone;\n"]},"metadata":{},"sourceType":"module"}